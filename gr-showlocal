#!/bin/sh
#git recursive directories scripts - http://safrm.net/projects/gr-scripts
#author: Miroslav Safr <miroslav.safr@gmail.com>
#
VERSION=NA
VERSION_DATE=NA
#support color escape characters on different terminals
alias echo="/bin/echo -e"

BASENAME=`basename $0`
START_TIME=`date +'%s'`
usage() {
    echo "$BASENAME ${VERSION} "
    echo "Shows local tags and status in subdirectories ./ or PROJECT_DIR/"
    echo "Usage:$BASENAME [OPTIONS]... [PROJECT_DIR]"
    echo " options: "
    echo " -v, --verbose ....................... prints more output"
    echo " -h, --help .......................... shows command line help"
    echo " -ls, --line-separator ............... project separated by colored line"
    echo " -ns, --no-summary ................... do not print execution summary"
    echo " -V, --version  ...................... prints version of scripts"
    echo "Note: touch <dir>/.git/skip skips selected repo"
    echo " "
}

while [ $# -gt 0 ]; do
  case "$1" in
    -V | --version) echo "`basename $0` ${VERSION} ${VERSION_DATE}"; exit 0 ;;  
    -h | --help) usage; exit ;;
    -v  | --verbose) VERBOSE=1;;
    -ls | --line-separator)
		LINE_SEPARATOR=1
		;;
    -ns | --no-summary) NO_SUMMARY=1 ;;
    * )       PROJECT_DIR=$1;; 
  esac
  shift
done

if [ -z "$PROJECT_DIR" ]; then
    PROJECT_DIR="./"
fi

if [ ! -d "$PROJECT_DIR" ]; then
    echo "directory $PROJECT_DIR does not exist";
    exit 1
fi

CWD=`pwd`
cd $PROJECT_DIR
PROJECT_DIR=`pwd`

find "$PROJECT_DIR" -type d -name ".git*"  |  sed 's/\/.git//g' | sort | while read ENTRY
do
        cd $ENTRY 
        if [ ! -z "$LINE_SEPARATOR" ]; then 
             echo "\033[44m $(tput el) $(tput sgr0)"
        fi
        LASTTAG=`git describe --tags --dirty=* --always 2> /dev/null`
        BRANCH=`git branch | egrep "^\*" | cut -d' ' -f2`
        #commits to push
        COMMITCOUNT=`git shortlog origin/$BRANCH..HEAD | grep -E '^[ ]+\w+' | wc -l`
        LASTMSG=`git --no-pager log -1 --pretty=tformat:'%Cred%h%Creset - %s' | cut -c -80`
        PROJECT20=`basename $ENTRY`
        PROJECT20=`printf '\e[1m%-22.22s\e[21m' $PROJECT20`
        if [ "0" = "$COMMITCOUNT" ]; then
            echo "\033[32m$PROJECT20\033[0m \033[01;34m $LASTTAG \033[0m (o/$BRANCH) $LASTMSG"
        else
            echo "\033[32m$PROJECT20\033[0m \033[01;34m $LASTTAG \033[0m (o/$BRANCH\033[33m+$COMMITCOUNT\033[0m) $LASTMSG"
        fi

        #local changes
        LOCAL_CHANGES=`git status -s`
        LOCAL_CHANGES_COUNT=`echo "$LOCAL_CHANGES" | grep -v '^$'| wc -l`
        if [ "x$LOCAL_CHANGES_COUNT" != "x0" ] || [ "x$COMMITCOUNT" != "x0" ]
        then
                echo "\033[43m NEEDS COMMIT (push:$COMMITCOUNT/local-files:$LOCAL_CHANGES_COUNT)\033[0m"    
        fi

        if [ ! -z "$VERBOSE" ]; then
                echo "$LOCAL_CHANGES"
        fi
        cd $PROJECT_DIR
done

if [ -z "$NO_SUMMARY" ]; then
        if [ ! -z "$LINE_SEPARATOR" ]; then 
             echo "\033[44m $(tput el) $(tput sgr0)"
        fi
        TIME=`date +%H:%M:%S`
        ELAPSED_TIME=$((`date +'%s'` - $START_TIME))
        echo "$BASENAME finished:$TIME took:$(($ELAPSED_TIME/60)) min $(($ELAPSED_TIME%60)) s"
fi



