#!/bin/sh
#git recursive directories scripts - http://safrm.net/projects/gr-scripts
#author: Miroslav Safr <miroslav.safr@gmail.com>
#shows local tags and if it was edited in subdirectories ./ or $1/ except those which are marked by "touch <dir>/.git/no_updates"
# -v shows the details
VERSION=NA                                                                   
VERSION_DATE=NA
#support color escape characters on different terminals
alias echo="/bin/echo -e"

BASENAME=`basename $0`
START_TIME=`date +'%s'`

while [ $# -gt 0 ]; do
  case "$1" in
    -v|--verbose) VERBOSE=1;;
    * )       PROJECT_DIR=$1;; 
  esac
  shift
done

if [ -z "$PROJECT_DIR" ]; then
    PROJECT_DIR="./"
fi

if [ ! -d "$PROJECT_DIR" ]; then
    echo "directory $PROJECT_DIR does not exist";
    exit 1
fi

CWD=`pwd`
cd $PROJECT_DIR
PROJECT_DIR=`pwd`

find "$PROJECT_DIR" -type d -name ".git*"  |  sed 's/\/.git//g' | sort | while read ENTRY
do
    cd $ENTRY 
    LASTTAG=`git describe --tags --dirty=* --always 2> /dev/null`
    BRANCH=`git branch | egrep "^\*" | cut -d' ' -f2`
    #commits to push
    COMMITCOUNT=`git shortlog origin/$BRANCH..HEAD | grep -E '^[ ]+\w+' | wc -l`
    LASTMSG=`git --no-pager log -1 --pretty=tformat:'%Cred%h%Creset - %s' | cut -c -80`
    PROJECT20=`basename $ENTRY`
    PROJECT20=`printf '%-20s' $PROJECT20`
    if [ "0" = "$COMMITCOUNT" ]; then
        echo "\033[32m$PROJECT20\033[0m \033[34m $LASTTAG \033[0m (o/$BRANCH) $LASTMSG"
    else
        echo "\033[32m$PROJECT20\033[0m \033[34m $LASTTAG \033[0m (o/$BRANCH\033[33m+$COMMITCOUNT\033[0m) $LASTMSG"
    fi

    #local changes
	LOCAL_CHANGES=`git status -s`
	LOCAL_CHANGES_COUNT=`echo "$LOCAL_CHANGES" | grep -v '^$'| wc -l`
    if [ "x$LOCAL_CHANGES_COUNT" != "x0" ] || [ "x$COMMITCOUNT" != "x0" ]
    then
        echo "\033[43m NEEDS COMMIT (push:$COMMITCOUNT/local-files:$LOCAL_CHANGES_COUNT)\033[0m"    
    fi

    if [ ! -z "$VERBOSE" ]; then
        echo "$LOCAL_CHANGES"
	fi
    cd $PROJECT_DIR
done

TIME=`date +%H:%M:%S`
ELAPSED_TIME=$((`date +'%s'` - $START_TIME))
echo "$BASENAME finished:$TIME took:$(($ELAPSED_TIME/60)) min $(($ELAPSED_TIME%60)) s"



