#!/bin/sh
#git recursive directories scripts - http://safrm.net/projects/gr-scripts
#author: Miroslav Safr <miroslav.safr@gmail.com>
#shows local tags versus current remote situation in subdirectories ./ or $1/ except those which are marked by "touch <dir>/.git/no_updates"
# -v shows the details
VERSION=NA                                                                   
VERSION_DATE=NA
BASENAME=`basename $0`
START_TIME=`date +'%s'`

while [ $# -gt 0 ]; do
  case "$1" in
    -v|--verbose) 
               VERBOSE=1
               ;;
	* )    PROJECT_DIR=$1;
	       ;; 
  esac
  shift
done

if [ -z "$PROJECT_DIR" ]
then
	PROJECT_DIR="./"
fi

if [ ! -d "$PROJECT_DIR" ] 
then
  echo "directory $PROJECT_DIR does not exist";
  exit 1
fi

CWD=`pwd`
cd $PROJECT_DIR
PROJECT_DIR=`pwd`


find "$PROJECT_DIR" -type d -name ".git*"  |  sed 's/\/.git//g' | sort | while read ENTRY
do
	if [ ! -f $ENTRY/.git/no_updates ]; then
		cd $ENTRY 
        LASTTAG=`git describe --tags --dirty=* --always 2> /dev/null`
        PROJECT20=`basename $ENTRY`
        PROJECT20=`printf '%-20s' $PROJECT20`
        #\c = without new line
        echo "\033[32m$PROJECT20\033[0m\c"
		BRANCH=`git branch | egrep "^\*" | cut -d' ' -f2`
    	git fetch origin 2> /dev/null
        if [ $? = 128 ] ; then
            NC="\033[41mNOT CONNECTED\033[0m "
        else
            NC=
    		git fetch origin --tags
        fi

        TO=`git describe origin/master --tags --always 2> /dev/null`

	    LASTMSG=`git --no-pager log -1 --pretty=tformat:'%Cred%h%Creset - %s' | cut -c -80`
        echo "\033[31m[$BRANCH] \033[0m local:\033[34m$LASTTAG\033[0m remote:$NC\033[34m$TO\033[0m ($LASTMSG)"

        git ls-files --exclude-standard --others
		if [ "$LASTTAG" = "$TO" ]
		then
			NEEDS_UPDATE=""
		else
            COMMITCOUNT_PULL=`git shortlog origin/$BRANCH..$BRANCH | grep -E '^[ ]+\w+' | wc -l`
			COMMITCOUNT_PUSH=`git shortlog $BRANCH..HEAD | grep -E '^[ ]+\w+' | wc -l`
            if [ `echo "$LASTTAG_NAME" | grep -q '*' 2> /dev/null` ]; then            
                LCH=""
            else
                LCH="/local changes"
            fi
			NEEDS_UPDATE=" NEEDS UPDATE OR COMMIT (pull:$COMMITCOUNT_PULL/push:$COMMITCOUNT_PUSH$LCH)"
            echo "\033[43m$NEEDS_UPDATE\033[0m"
		fi
        if [ ! -z "$VERBOSE" ]; then
        	   git status -s
    	fi
		cd $PROJECT_DIR
	fi
done

TIME=`date +%H:%M:%S`
ELAPSED_TIME=$((`date +'%s'` - $START_TIME))
echo "$BASENAME finished:$TIME took:$(($ELAPSED_TIME/60)) min $(($ELAPSED_TIME%60)) s"

