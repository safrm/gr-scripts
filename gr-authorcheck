#!/bin/bash
#git recursive directories scripts - http://safrm.net/projects/gr-scripts
#author: Miroslav Safr <miroslav.safr@gmail.com>
#search for inappropriate commits
#
#gr-authorcheck [OPTIONS] <SEARCHED_PATTERN> [<PROJECT_DIR>]
#  searching is case sensitive
VERSION=NA                                                                   
VERSION_DATE=NA
BASENAME=`basename $0`
usage() {
    echo "`basename $0` ${VERSION}"
    echo "Usage:`basename $0` [OPTIONS]... PATTERN [PROJECT_DIR]"
    echo " PATTERN ............................ name or email of author or part of it "
    echo " options: "
    echo " -v, --verbose ...................... prints more output"
    echo " -?, --help ......................... shows command line help"
    echo " -cs ................................ case sensitive search (by default it is insensitive)"
    echo " "
}
CASE_SENS=0
VERBOSE=0
TOTAL_COUNT=0
FOUND_COUNT=0
while [ $# -gt 0 ]; do
  case "$1" in
    -v|--verbose) VERBOSE=1;;
    -?|--help) usage exit ;;
    -cs) CASE_SENS=1;;
	* )      
        if [ -z "$WHAT" ]; then  
            WHAT=$1 ; 
        elif [ -z "$PROJECT_DIR" ]; then
            PROJECT_DIR=$1 ;
        else
            echo "There can be only 2 arguments without <WHAT> <WHERE>, exiting.."; exit 1;        
        fi 
        ;;
  esac
  shift
done

if [ -z "$WHAT" ]; then 
    echo "You have to specify searching pattern, exiting.."; exit 1;
fi

if [ -z "$PROJECT_DIR" ] || [ ! -d "$PROJECT_DIR" ]; then
	PROJECT_DIR="./"
fi
echo "searching for '$WHAT' in $PROJECT_DIR, CS: $CASE_SENS, VERBOSE:$VERBOSE"

#so far the difference is only about new lines..
if [ $VERBOSE -eq 1 ]; then
    LOGFORMAT="%Cred%h%Creset %d -%C(yellow)%d%Creset %s %Cgreen(%cr) %n %C(bold blue)A:%an <%ae>%Creset %n%C(bold cyan) C:%cn <%ce>%Creset";
else
    LOGFORMAT="%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %n %C(bold blue) A:%an <%ae>%Creset %C(bold cyan)C:%cn <%ce>%Creset";
fi

CWD=`pwd`
cd $PROJECT_DIR
PROJECT_DIR=`pwd`
find $PROJECT_DIR -type d -name ".git*"  |  sed 's/\/.git//g' | sort | while read ENTRY
do
	cd $ENTRY ;
    DIR_COMMIT_COUNT=`git --no-pager log --pretty=tformat:'%h' | grep -v '^$'  | wc -l`
    echo "$ENTRY: ($DIR_COMMIT_COUNT commits)"
    if [ $CASE_SENS -eq 1 ]; then
     	git --no-pager log --pretty=tformat:"$LOGFORMAT" --author=$WHAT --committer=$WHAT ;
    else
        FOUND_COMMITS=`git --no-pager log --pretty=tformat:'%H %an %ae %cn %ce' | grep -i $WHAT | cut -d ' ' -f1`
        FOUND=`echo "$FOUND_COMMITS" | grep -v '^$' | wc -l`;
        for COMMIT in $FOUND_COMMITS; do  
            git --no-pager log -1 --pretty=tformat:"$LOGFORMAT" $COMMIT 
        done
    fi
	cd $CWD
    FOUND_COUNT=$(($FOUND_COUNT + $FOUND));
    TOTAL_COUNT=$(($TOTAL_COUNT + $DIR_COMMIT_COUNT));
    echo "FOUND local:$FOUND/$DIR_COMMIT_COUNT total:$FOUND_COUNT/$TOTAL_COUNT ";
done

TIME=`date +%H:%M:%S`
echo "$BASENAME found $FOUND_COUNT in $TOTAL_COUNT commits, finished:$TIME"




