#!/bin/sh
#git recursive directories scripts - http://safrm.net/projects/gr-scripts
#author: Miroslav Safr <miroslav.safr@gmail.com>
#shows local tags versus current remote situation in subdirectories ./ or $1/ except those which are marked by "touch <dir>/.git/no_updates"
# -v shows the details
VERSION=NA                                                                 
VERSION_DATE=NA
#support color escape characters on different terminals
alias echo="/bin/echo -e"

BASENAME=`basename $0`
START_TIME=`date +'%s'`

while [ $# -gt 0 ]; do
  case "$1" in
    -V | --version) echo "`basename $0` ${VERSION} ${VERSION_DATE}"; exit 0 ;;  
    -v|--verbose) 
               VERBOSE=1
               ;;
    -ns|--no-summary) 
               NO_SUMMARY=1
               ;;
    -hm|--header-message) shift;
               HEADER_MESSAGE=$1;
		           ;;
	* )    PROJECT_DIR=$1;
	       ;; 
  esac
  shift
done

if [ -z "$PROJECT_DIR" ]
then
	PROJECT_DIR="./"
fi

if [ ! -d "$PROJECT_DIR" ] 
then
  echo "directory $PROJECT_DIR does not exist";
  exit 1
fi

CWD=`pwd`
cd $PROJECT_DIR
PROJECT_DIR=`pwd`

if [ ! -z "$HEADER_MESSAGE" ]; then
	echo "$HEADER_MESSAGE"
fi

find "$PROJECT_DIR" -type d -name ".git*"  |  sed 's/\/.git//g' | sort | while read ENTRY
do
	if [ ! -f $ENTRY/.git/no_updates ]; then
		cd $ENTRY 
		BRANCH=`git branch | egrep "^\*" | cut -d' ' -f2`
#		git fetch origin 
		git fetch origin --tags 2> /dev/null 
        if [ $? = 128 ] ; then
            NC=" remote \033[41mNOT CONNECTED\033[0m "
        else
            NC=
        fi

        LASTTAG_NAME=`git describe --tags --abbrev=0 2> /dev/null`
        PROJECT20=`basename $ENTRY`
        PROJECT20=`printf '%-20.20s' $PROJECT20`

	
        if [ -z "$VERBOSE" ]; then
            if [ -z $LASTTAG_NAME ]; then 
              #no tags
              echo "\033[32m$PROJECT20\033[0m \033[31m [$BRANCH] \033[0m \033[41m no tags available \033[0m $NC"
            else 
              #valid tag
              echo "\033[32m$PROJECT20\033[0m \033[31m [$BRANCH] \033[0m \033[34m $LASTTAG_NAME \033[0m $NC"
            fi           
        else
            if [ -z "$LASTTAG_NAME" ]; then
              #no tags
              COUNT_FROM_TAG=`git log --pretty=tformat:'%h' HEAD  | grep -v '^$' |wc -l`
              TAGMESSAGE_COLOR="\033[41m no tags available \033[0m"
            else
              #valid tags
              COUNT_FROM_TAG=`git log --pretty=tformat:'%h' $LASTTAG_NAME..HEAD  | grep -v '^$' |wc -l`
              TAGMESSAGE=`git tag -l -n1 $LASTTAG_NAME`
              TAGMESSAGE_COLOR="\033[34m $TAGMESSAGE \033[0m  (+$COUNT_FROM_TAG)"
              #LASTMSG=`git log -1 --format="%s"  $LASTTAG_NAME`
            fi
            echo "\033[32m$PROJECT20:\033[0m \033[31m [$BRANCH] \033[0m $TAGMESSAGE_COLOR $NC" ;      
        fi
		cd "$PROJECT_DIR"
	fi
done

if [ -z "$NO_SUMMARY" ]; then
	TIME=`date +%H:%M:%S`
	ELAPSED_TIME=$((`date +'%s'` - $START_TIME))
	echo "$BASENAME finished:$TIME took:$(($ELAPSED_TIME/60)) min $(($ELAPSED_TIME%60)) s"
fi


